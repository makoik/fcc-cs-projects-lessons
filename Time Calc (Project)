def add_time(start, duration, *args):

    j = start.find(':')
    k = start.find(' ')
    l = duration.find(':')

    h = start[:j]
    hours = int(h)
    m = start[j+1:k]
    minutes = int(m)
    tod = start[k+1:]
    
    dh = duration[:l]
    dhours = int(dh)
    dm = duration[l+1:]
    dminutes = int(dm)

    total_minutes = (minutes + dminutes)
    
    if tod == 'PM' and hours != 12:
        hours += 12
    elif tod == 'AM' and hours == 12:
        hours = 0
    
    extra_hour = total_minutes // 60
    total_hours = hours + dhours + extra_hour
    new_min = total_minutes % 60

    day_c = total_hours // 24
    
    new_hour = total_hours % 24 

    if new_hour >= 12:
        tod = 'PM'
        if new_hour > 12:
            new_hour -= 12   
    else:
        tod = 'AM'
        if new_hour == 0:
            new_hour = 12

    new_time = f"{new_hour}:{new_min:02} {tod}"

    if args:
        days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
        start_day = args[0].capitalize()
        start_day_index = days.index(start_day)
        new_day_index = (start_day_index + day_c) % 7
        new_day = days[new_day_index]
        new_time = f"{new_hour}:{new_min:02} {tod}, {new_day}"
        if day_c == 1:
            new_time = f"{new_hour}:{new_min:02} {tod}, {new_day} (next day)"
        if day_c > 1:
            new_time = f"{new_hour}:{new_min:02} {tod}, {new_day} ({day_c} days later)"
    else:
        if day_c == 1:
            new_time += ' (next day)'
        elif day_c > 1:
            new_time += f' ({day_c} days later)'

    print(new_time)
    return new_time

add_time('11:59 PM', '24:05', 'Wednesday')

>>>12:04 AM, Friday (2 days later)




			ChatGPT solution for timer splitting


def add_time(start, duration):
    
	# Extract hours, minutes, and AM/PM from start time
    start_time, tod = start.split()
    start_hour, start_minute = map(int, start_time.split(':'))
    
    # Extract hours and minutes from duration
    dur_hour, dur_minute = map(int, duration.split(':'))
